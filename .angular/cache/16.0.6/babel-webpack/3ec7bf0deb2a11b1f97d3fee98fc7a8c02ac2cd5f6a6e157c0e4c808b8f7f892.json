{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductListComponent = class ProductListComponent {\n  get listFilter() {\n    return this._listFilter;\n  }\n  set listFilter(value) {\n    this._listFilter = value;\n    this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter) : this.products;\n  }\n  constructor(productService, authService, router) {\n    this.productService = productService;\n    this.authService = authService;\n    this.router = router;\n    this.pageTitle = 'Product List';\n    this.imageWidth = 50;\n    this.imageMargin = 2;\n    this.showImage = false;\n    this.errorMessage = '';\n    this._listFilter = '';\n    this.filteredProducts = [];\n    this.products = [];\n    this.isAuthenticated = false; // Initialize as false, update based on actual authentication state\n  }\n  // Add a logout method that calls the AuthService's logout method\n  logout() {\n    this.authService.logout();\n    this.router.navigate([\"login\"]);\n    // Optionally, you can redirect the user to another page after logout\n  }\n\n  performFilter(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.products.filter(product => product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\n  }\n  // Checks both the product name and tags\n  performFilter2(filterBy) {\n    filterBy = filterBy.toLocaleLowerCase();\n    return this.products.filter(product => product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1 || product.tags && product.tags.some(tag => tag.toLocaleLowerCase().indexOf(filterBy) !== -1));\n  }\n  toggleImage() {\n    this.showImage = !this.showImage;\n  }\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthenticatedUser();\n    this.productService.getProducts().subscribe({\n      next: products => {\n        this.products = products;\n        this.filteredProducts = this.products;\n      },\n      error: err => this.errorMessage = err\n    });\n  }\n};\nProductListComponent = __decorate([Component({\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})], ProductListComponent);\nexport { ProductListComponent };","map":{"version":3,"names":["Component","ProductListComponent","listFilter","_listFilter","value","filteredProducts","performFilter","products","constructor","productService","authService","router","pageTitle","imageWidth","imageMargin","showImage","errorMessage","isAuthenticated","logout","navigate","filterBy","toLocaleLowerCase","filter","product","productName","indexOf","performFilter2","tags","some","tag","toggleImage","ngOnInit","isAuthenticatedUser","getProducts","subscribe","next","error","err","__decorate","templateUrl","styleUrls"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-list.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n  pageTitle = 'Product List';\r\n  imageWidth = 50;\r\n  imageMargin = 2;\r\n  showImage = false;\r\n  errorMessage = '';\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.filteredProducts = this.listFilter ? this.performFilter(this.listFilter) : this.products;\r\n  }\r\n\r\n  filteredProducts: Product[] = [];\r\n  products: Product[] = [];\r\n\r\n  isAuthenticated = false; // Initialize as false, update based on actual authentication state\r\n\r\n  constructor(private productService: ProductService, private authService: AuthService, private router: Router) { }\r\n\r\n\r\n  // Add a logout method that calls the AuthService's logout method\r\n  logout() {\r\n    this.authService.logout();\r\n    this.router.navigate([\"login\"]);\r\n    \r\n    // Optionally, you can redirect the user to another page after logout\r\n  }\r\n\r\n  performFilter(filterBy: string): Product[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.products.filter((product: Product) =>\r\n      product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1);\r\n  }\r\n\r\n  // Checks both the product name and tags\r\n  performFilter2(filterBy: string): Product[] {\r\n    filterBy = filterBy.toLocaleLowerCase();\r\n    return this.products.filter((product: Product) =>\r\n      product.productName.toLocaleLowerCase().indexOf(filterBy) !== -1 ||\r\n        (product.tags && product.tags.some(tag => tag.toLocaleLowerCase().indexOf(filterBy) !== -1)));\r\n  }\r\n\r\n  toggleImage(): void {\r\n    this.showImage = !this.showImage;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isAuthenticated = this.authService.isAuthenticatedUser();\r\n    this.productService.getProducts().subscribe({\r\n      next: products => {\r\n        this.products = products;\r\n        this.filteredProducts = this.products;\r\n      },\r\n      error: err => this.errorMessage = err\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  \r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAUjD,IAAaC,oBAAoB,GAAjC,MAAaA,oBAAoB;EAQ/B,IAAIC,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACC,WAAW;EACzB;EACA,IAAID,UAAUA,CAACE,KAAa;IAC1B,IAAI,CAACD,WAAW,GAAGC,KAAK;IACxB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,UAAU,GAAG,IAAI,CAACI,aAAa,CAAC,IAAI,CAACJ,UAAU,CAAC,GAAG,IAAI,CAACK,QAAQ;EAC/F;EAOAC,YAAoBC,cAA8B,EAAUC,WAAwB,EAAUC,MAAc;IAAxF,KAAAF,cAAc,GAAdA,cAAc;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IApBpG,KAAAC,SAAS,GAAG,cAAc;IAC1B,KAAAC,UAAU,GAAG,EAAE;IACf,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,YAAY,GAAG,EAAE;IAEjB,KAAAb,WAAW,GAAG,EAAE;IAShB,KAAAE,gBAAgB,GAAc,EAAE;IAChC,KAAAE,QAAQ,GAAc,EAAE;IAExB,KAAAU,eAAe,GAAG,KAAK,CAAC,CAAC;EAEuF;EAGhH;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACR,WAAW,CAACQ,MAAM,EAAE;IACzB,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAE/B;EACF;;EAEAb,aAAaA,CAACc,QAAgB;IAC5BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAACd,QAAQ,CAACe,MAAM,CAAEC,OAAgB,IAC3CA,OAAO,CAACC,WAAW,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrE;EAEA;EACAM,cAAcA,CAACN,QAAgB;IAC7BA,QAAQ,GAAGA,QAAQ,CAACC,iBAAiB,EAAE;IACvC,OAAO,IAAI,CAACd,QAAQ,CAACe,MAAM,CAAEC,OAAgB,IAC3CA,OAAO,CAACC,WAAW,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,IAC7DG,OAAO,CAACI,IAAI,IAAIJ,OAAO,CAACI,IAAI,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACR,iBAAiB,EAAE,CAACI,OAAO,CAACL,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE,CAAC;EACnG;EAEAU,WAAWA,CAAA;IACT,IAAI,CAACf,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS;EAClC;EAEAgB,QAAQA,CAAA;IACN,IAAI,CAACd,eAAe,GAAG,IAAI,CAACP,WAAW,CAACsB,mBAAmB,EAAE;IAC7D,IAAI,CAACvB,cAAc,CAACwB,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAE5B,QAAQ,IAAG;QACf,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QACxB,IAAI,CAACF,gBAAgB,GAAG,IAAI,CAACE,QAAQ;MACvC,CAAC;MACD6B,KAAK,EAAEC,GAAG,IAAI,IAAI,CAACrB,YAAY,GAAGqB;KACnC,CAAC;EACJ;CAKD;AAhEYpC,oBAAoB,GAAAqC,UAAA,EAJhCtC,SAAS,CAAC;EACTuC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWvC,oBAAoB,CAgEhC;SAhEYA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
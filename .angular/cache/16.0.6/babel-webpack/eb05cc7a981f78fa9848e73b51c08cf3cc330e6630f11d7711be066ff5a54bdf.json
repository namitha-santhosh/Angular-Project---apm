{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass ImageUploadService {\n  constructor() {}\n  // This method simulates uploading an image to a local folder and returns the image URL.\n  /* uploadImage(file: File): Observable<string> {\n    // Generate a unique file name to prevent overwriting existing files.\n    const fileName = `image_${Date.now()}_${file.name}`;\n       // Create a URL pointing to the local 'uploads' folder.\n    const imageUrl = `/uploads/${fileName}`;\n       // Simulate saving the image to the local 'uploads' folder.\n    this.saveImageLocally(file, fileName);\n       return of(imageUrl);\n  } */\n  saveImageLocally(file, fileName) {\n    // Simulate saving the image to the 'uploads' folder.\n    // In a real server, you would write the file to a local folder using a file system API.\n    // Here, we simulate it by logging the file name.\n    console.log(`Saved image '${file.name}' as '${fileName}' in 'uploads' folder.`);\n  }\n}\n_class = ImageUploadService;\n_class.ɵfac = function ImageUploadService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { ImageUploadService };","map":{"version":3,"names":["ImageUploadService","constructor","saveImageLocally","file","fileName","console","log","name","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\imageUpload.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImageUploadService {\r\n  constructor() {}\r\n\r\n  // This method simulates uploading an image to a local folder and returns the image URL.\r\n  /* uploadImage(file: File): Observable<string> {\r\n    // Generate a unique file name to prevent overwriting existing files.\r\n    const fileName = `image_${Date.now()}_${file.name}`;\r\n\r\n    // Create a URL pointing to the local 'uploads' folder.\r\n    const imageUrl = `/uploads/${fileName}`;\r\n\r\n    // Simulate saving the image to the local 'uploads' folder.\r\n    this.saveImageLocally(file, fileName);\r\n\r\n    return of(imageUrl);\r\n  } */\r\n\r\n  private saveImageLocally(file: File, fileName: string) {\r\n    // Simulate saving the image to the 'uploads' folder.\r\n    // In a real server, you would write the file to a local folder using a file system API.\r\n    // Here, we simulate it by logging the file name.\r\n    console.log(`Saved image '${file.name}' as '${fileName}' in 'uploads' folder.`);\r\n  }\r\n}\r\n"],"mappings":";;AAGA,MAGaA,kBAAkB;EAC7BC,YAAA,GAAe;EAEf;EACA;;;;;;;;;EAaQC,gBAAgBA,CAACC,IAAU,EAAEC,QAAgB;IACnD;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,gBAAgBH,IAAI,CAACI,IAAI,SAASH,QAAQ,wBAAwB,CAAC;EACjF;;SAtBWJ,kBAAkB;;mBAAlBA,MAAkB;AAAA;;SAAlBA,MAAkB;EAAAQ,OAAA,EAAlBR,MAAkB,CAAAS,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPV,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
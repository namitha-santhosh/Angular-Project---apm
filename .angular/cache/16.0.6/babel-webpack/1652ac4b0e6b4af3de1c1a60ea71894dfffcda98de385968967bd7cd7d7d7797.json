{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../auth.service\";\nclass LoginPageComponent {\n  constructor(formBuilder, http, router, authService) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  login() {\n    const credentials = {\n      email: this.loginForm.value.email,\n      password: this.loginForm.value.password\n    };\n    this.http.post('http://localhost:8000/api/login', credentials).subscribe(response => {\n      // Handle the successful login response here\n      const message = response.message;\n      const fullname = response.fullName;\n      alert(`${message}`);\n      this.authService.login();\n      this.loginForm.reset();\n      this.router.navigate(['products']);\n    }, error => {\n      // Handle login error here\n      alert('User not found or invalid password');\n    });\n  }\n  logout() {\n    // Implement the logout logic if needed\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-page\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"routerLink\", \"/signUp\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\");\n      i0.ɵɵtext(13, \"Create New Account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵtext(15, \"SignUp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"button\", 6);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPageComponent };","map":{"version":3,"names":["Validators","LoginPageComponent","constructor","formBuilder","http","router","authService","loginForm","group","email","required","password","ngOnInit","login","credentials","value","post","subscribe","response","message","fullname","fullName","alert","reset","navigate","error","logout","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","i4","AuthService","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private http: HttpClient,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {\r\n    this.loginForm = this.formBuilder.group({\r\n      email: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login() {\r\n    const credentials = {\r\n      email: this.loginForm.value.email,\r\n      password: this.loginForm.value.password\r\n    };\r\n\r\n    this.http\r\n      .post<any>('http://localhost:8000/api/login', credentials)\r\n      .subscribe(\r\n        (response) => {\r\n          // Handle the successful login response here\r\n          const message = response.message;\r\n          const fullname = response.fullName;\r\n          alert(`${message}`);\r\n          this.authService.login();\r\n          this.loginForm.reset();\r\n          this.router.navigate(['products']);\r\n        },\r\n        (error) => {\r\n          // Handle login error here\r\n          alert('User not found or invalid password');\r\n        }\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    // Implement the logout logic if needed\r\n  }\r\n}\r\n\r\n","\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"form-box\">\r\n        <h3>Login</h3>\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Password\"/>\r\n        </div>\r\n\r\n        <span>Create New Account </span>\r\n        <a routerLink=\"/signUp\">SignUp</a>\r\n        <br/>\r\n        <button type=\"submit\" class=\"btn btn-success\">Login</button>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\n/* import { Injectable } from '@angular/core';\nimport { CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ProductEditComponent } from './product-edit.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductEditGuard implements CanDeactivate<ProductEditComponent> {\n  canDeactivate(component: ProductEditComponent): Observable<boolean> | Promise<boolean> | boolean {\n    if (component.productForm.dirty) {\n      const productName = component.productForm.get('productName')?.value || 'New Product';\n      return confirm(`Navigate away and lose all changes to ${productName}?`);\n    }\n    return true;\n  }\n} */","map":{"version":3,"names":[],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-edit.guard.ts"],"sourcesContent":["/* import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProductEditComponent } from './product-edit.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductEditGuard implements CanDeactivate<ProductEditComponent> {\r\n  canDeactivate(component: ProductEditComponent): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (component.productForm.dirty) {\r\n      const productName = component.productForm.get('productName')?.value || 'New Product';\r\n      return confirm(`Navigate away and lose all changes to ${productName}?`);\r\n    }\r\n    return true;\r\n  }\r\n} */\r\n"],"mappings":";;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
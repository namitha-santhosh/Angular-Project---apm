{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth.service\";\nclass CartService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://127.0.0.1:8000/api/cart/add-product'; // Replace with your Symfony API endpoint URL\n  }\n  /* addToCart(productId: number): Observable<any> {\n    const token = this.authService.getToken();\n       const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const apiUrlWithProductId = `http://127.0.0.1:8000/api/cart/add-product/${productId}`;\n    return this.http.post(apiUrlWithProductId, {}, { headers });\n  } */\n  addToCart(productId, quantity) {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const apiUrlWithProductId = `http://127.0.0.1:8000/api/cart/add-product/${productId}`;\n    return this.http.post(apiUrlWithProductId, {\n      quantity\n    }, {\n      headers\n    });\n  }\n  fetchCartData() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.get('http://127.0.0.1:8000/api/cart/view-cart', {\n      headers\n    });\n  }\n  removeProduct(productId) {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    return this.http.post(`http://127.0.0.1:8000/api/cart/remove-product/${productId}`, {}, {\n      headers\n    });\n  }\n}\n_class = CartService;\n_class.ɵfac = function CartService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { CartService };","map":{"version":3,"names":["HttpHeaders","CartService","constructor","http","authService","apiUrl","addToCart","productId","quantity","token","getToken","headers","set","apiUrlWithProductId","post","fetchCartData","get","removeProduct","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\CartService.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n  private apiUrl = 'http://127.0.0.1:8000/api/cart/add-product'; // Replace with your Symfony API endpoint URL\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {}\r\n\r\n\r\n  /* addToCart(productId: number): Observable<any> {\r\n    const token = this.authService.getToken();\r\n\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    const apiUrlWithProductId = `http://127.0.0.1:8000/api/cart/add-product/${productId}`;\r\n    return this.http.post(apiUrlWithProductId, {}, { headers });\r\n  } */\r\n\r\n  addToCart(productId: number, quantity: number): Observable<any> {\r\n    const token = this.authService.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    const apiUrlWithProductId = `http://127.0.0.1:8000/api/cart/add-product/${productId}`;\r\n    return this.http.post(apiUrlWithProductId, { quantity }, { headers });\r\n}\r\n\r\n\r\n  fetchCartData(): Observable<any> {\r\n    const token = this.authService.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n\r\n    return this.http.get<any>('http://127.0.0.1:8000/api/cart/view-cart', { headers });\r\n  }\r\n\r\n  removeProduct(productId: number): Observable<any> {\r\n    const token = this.authService.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n  \r\n     return this.http.post<any>(`http://127.0.0.1:8000/api/cart/remove-product/${productId}`, {}, { headers });\r\n  }\r\n  \r\n}\r\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAI9D,MAGaC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAFjD,KAAAC,MAAM,GAAG,4CAA4C,CAAC,CAAC;EAEU;EAGzE;;;;;;EAQAC,SAASA,CAACC,SAAiB,EAAEC,QAAgB;IAC3C,MAAMC,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;IACzE,MAAMI,mBAAmB,GAAG,8CAA8CN,SAAS,EAAE;IACrF,OAAO,IAAI,CAACJ,IAAI,CAACW,IAAI,CAACD,mBAAmB,EAAE;MAAEL;IAAQ,CAAE,EAAE;MAAEG;IAAO,CAAE,CAAC;EACzE;EAGEI,aAAaA,CAAA;IACX,MAAMN,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;IAEzE,OAAO,IAAI,CAACN,IAAI,CAACa,GAAG,CAAM,0CAA0C,EAAE;MAAEL;IAAO,CAAE,CAAC;EACpF;EAEAM,aAAaA,CAACV,SAAiB;IAC7B,MAAME,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;IAExE,OAAO,IAAI,CAACN,IAAI,CAACW,IAAI,CAAM,iDAAiDP,SAAS,EAAE,EAAE,EAAE,EAAE;MAAEI;IAAO,CAAE,CAAC;EAC5G;;SAlCWV,WAAW;;mBAAXA,MAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;SAAXtB,MAAW;EAAAuB,OAAA,EAAXvB,MAAW,CAAAwB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
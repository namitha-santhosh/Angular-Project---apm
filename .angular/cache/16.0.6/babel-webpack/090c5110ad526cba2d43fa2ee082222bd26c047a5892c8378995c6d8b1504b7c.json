{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nlet CategoryComponent = class CategoryComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.categories = []; // Array to store fetched categories\n    this.selectedCategoryId = null; // Store the selected category ID\n    this.products = []; // Array to store fetched products\n  }\n\n  ngOnInit() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    // Fetch categories from your API (replace with your actual API endpoint)\n    this.http.get('http://127.0.0.1:8000/api/category', {\n      headers\n    }).subscribe(data => {\n      this.categories = data;\n    });\n  }\n  onCategoryChange() {\n    if (this.selectedCategoryId !== null) {\n      const categoryId = +this.selectedCategoryId; // Convert to integer\n      const apiUrl = `http://127.0.0.1:8000/api/category/${categoryId}`;\n      const token = this.authService.getToken();\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      this.http.get(apiUrl, {\n        headers\n      }).subscribe(data => {\n        this.products = data;\n      });\n    } else {\n      // If no category is selected, clear the products array\n      this.products = [];\n    }\n  }\n};\nCategoryComponent = __decorate([Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})], CategoryComponent);\nexport { CategoryComponent };","map":{"version":3,"names":["Component","HttpHeaders","CategoryComponent","constructor","http","authService","categories","selectedCategoryId","products","ngOnInit","token","getToken","headers","set","get","subscribe","data","onCategoryChange","categoryId","apiUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category\\category.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css'],\n})\nexport class CategoryComponent implements OnInit {\n  categories: any[] = []; // Array to store fetched categories\n  selectedCategoryId: number | null = null; // Store the selected category ID\n  products: any[] = []; // Array to store fetched products\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  ngOnInit(): void {\n\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    // Fetch categories from your API (replace with your actual API endpoint)\n    this.http.get('http://127.0.0.1:8000/api/category', { headers }).subscribe((data: any) => {\n      this.categories = data;\n    });\n  }\n\n  onCategoryChange(): void {\n    if (this.selectedCategoryId !== null) {\n      const categoryId = +this.selectedCategoryId; // Convert to integer\n      const apiUrl = `http://127.0.0.1:8000/api/category/${categoryId}`;\n      const token = this.authService.getToken();\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);  \n\n      this.http.get(apiUrl, {headers}).subscribe((data: any) => {\n        this.products = data;\n      });\n    } else {\n      // If no category is selected, clear the products array\n      this.products = [];\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAqBC,WAAW,QAAQ,sBAAsB;AAQ9D,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAiB;EAK5BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IAJzD,KAAAC,UAAU,GAAU,EAAE,CAAC,CAAC;IACxB,KAAAC,kBAAkB,GAAkB,IAAI,CAAC,CAAC;IAC1C,KAAAC,QAAQ,GAAU,EAAE,CAAC,CAAC;EAEoD;;EAE1EC,QAAQA,CAAA;IAEN,MAAMC,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;IACzE;IACA,IAAI,CAACN,IAAI,CAACU,GAAG,CAAC,oCAAoC,EAAE;MAAEF;IAAO,CAAE,CAAC,CAACG,SAAS,CAAEC,IAAS,IAAI;MACvF,IAAI,CAACV,UAAU,GAAGU,IAAI;IACxB,CAAC,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACV,kBAAkB,KAAK,IAAI,EAAE;MACpC,MAAMW,UAAU,GAAG,CAAC,IAAI,CAACX,kBAAkB,CAAC,CAAC;MAC7C,MAAMY,MAAM,GAAG,sCAAsCD,UAAU,EAAE;MACjE,MAAMR,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;MACzC,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUH,KAAK,EAAE,CAAC;MAEzE,IAAI,CAACN,IAAI,CAACU,GAAG,CAACK,MAAM,EAAE;QAACP;MAAO,CAAC,CAAC,CAACG,SAAS,CAAEC,IAAS,IAAI;QACvD,IAAI,CAACR,QAAQ,GAAGQ,IAAI;MACtB,CAAC,CAAC;KACH,MAAM;MACL;MACA,IAAI,CAACR,QAAQ,GAAG,EAAE;;EAEtB;CACD;AAhCYN,iBAAiB,GAAAkB,UAAA,EAL7BpB,SAAS,CAAC;EACTqB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWrB,iBAAiB,CAgC7B;SAhCYA,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
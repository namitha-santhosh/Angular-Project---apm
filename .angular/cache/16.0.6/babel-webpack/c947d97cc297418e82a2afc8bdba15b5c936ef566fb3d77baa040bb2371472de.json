{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../auth.service\";\nclass LoginPageComponent {\n  constructor(formbuilder, http, router, authService) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.authService = authService;\n    this.subscription = new Subscription();\n  }\n  ngOnInit() {\n    this.loginForm = this.formbuilder.group({\n      email: [''],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    console.log(this.loginForm.value);\n    this.subscription.add(this.http.get(\"http://localhost:3000/signupUsersList\").subscribe({\n      next: res => {\n        const user = res.find(a => {\n          return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\n        });\n        if (user) {\n          const fname = user.fname;\n          alert(`Welcome, ${fname}`);\n          this.authService.login();\n          this.loginForm.reset();\n          this.router.navigate([\"products\"]);\n        } else {\n          alert(\"User not found\");\n        }\n      },\n      error: err => {\n        alert(\"Something went wrong\");\n      }\n    }));\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  logout() {\n    // Call the logout method from AuthService\n    this.authService.logout();\n    // Redirect to the login page after logout\n    this.router.navigate(['/login']);\n  }\n}\n_class = LoginPageComponent;\n_class.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-login-page\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"form-box\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter Email\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Enter Password\", 1, \"form-control\", \"mb-3\", \"mt-3\"], [\"routerLink\", \"/signUp\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"span\");\n      i0.ɵɵtext(13, \"Create New Account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"a\", 5);\n      i0.ɵɵtext(15, \"SignUp\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\");\n      i0.ɵɵelementStart(17, \"button\", 6);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPageComponent };","map":{"version":3,"names":["Validators","Subscription","LoginPageComponent","constructor","formbuilder","http","router","authService","subscription","ngOnInit","loginForm","group","email","password","required","login","console","log","value","add","get","subscribe","next","res","user","find","a","fname","alert","reset","navigate","error","err","ngOnDestroy","unsubscribe","logout","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","i4","AuthService","selectors","decls","vars","consts","template","LoginPageComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\login-page\\login-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit{\r\n  public loginForm!: FormGroup;\r\n  private subscription: Subscription = new Subscription();\r\n\r\n\r\n  constructor(private formbuilder: FormBuilder,\r\n              private http: HttpClient, \r\n              private router: Router, \r\n              private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.formbuilder.group({\r\n      email: [''],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n  \r\n \r\n  login() {\r\n    console.log(this.loginForm.value)\r\n    this.subscription.add(\r\n    this.http.get<any>(\"http://localhost:3000/signupUsersList\")\r\n      .subscribe({\r\n        next: (res) => {\r\n          const user = res.find((a: any) => {\r\n            return a.email === this.loginForm.value.email && a.password === this.loginForm.value.password;\r\n          });\r\n          if (user) {\r\n            const fname = user.fname;\r\n            alert(`Welcome, ${fname}`);\r\n            this.authService.login();\r\n            this.loginForm.reset();\r\n            this.router.navigate([\"products\"]);\r\n          } else {\r\n            alert(\"User not found\");\r\n          }\r\n        },\r\n        error: (err) => {\r\n          alert(\"Something went wrong\");\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n  \r\n\r\n  logout() {\r\n    // Call the logout method from AuthService\r\n    this.authService.logout();\r\n    // Redirect to the login page after logout\r\n    this.router.navigate(['/login']);\r\n  }\r\n  \r\n}\r\n","\r\n  <div class=\"container\">\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"form-box\">\r\n        <h3>Login</h3>\r\n        <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"text\" formControlName=\"email\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Email\"/>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label>Password</label>\r\n            <input type=\"password\" formControlName=\"password\" class=\"form-control mb-3 mt-3\" placeholder=\"Enter Password\"/>\r\n        </div>\r\n\r\n        <span>Create New Account </span>\r\n        <a routerLink=\"/signUp\">SignUp</a>\r\n        <br/>\r\n        <button type=\"submit\" class=\"btn btn-success\">Login</button>\r\n    </form>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
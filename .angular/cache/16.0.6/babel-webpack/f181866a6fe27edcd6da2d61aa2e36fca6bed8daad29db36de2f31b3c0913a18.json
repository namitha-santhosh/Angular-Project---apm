{"ast":null,"code":"var _class;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CategoryAddComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Category name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass CategoryAddComponent {\n  constructor(http, authService, router) {\n    this.http = http;\n    this.authService = authService;\n    this.router = router;\n    this.newCategory = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {}\n  addCategory(form) {\n    if (form.invalid) {\n      // Form is invalid, don't submit\n      return;\n    }\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const apiUrl = 'http://127.0.0.1:8000/api/add-category';\n    this.http.post(apiUrl, this.newCategory, {\n      headers\n    }).subscribe(response => {\n      console.log('Category added:', response);\n      this.router.navigate(['/products']);\n    }, error => {\n      console.error('Error adding category:', error);\n    });\n  }\n}\n_class = CategoryAddComponent;\n_class.ɵfac = function CategoryAddComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-category-add\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [1, \"form-group\", \"row\", \"mb-2\"], [\"for\", \"name\", 1, \"col-md-2\", \"col-form-label\"], [1, \"col-md-8\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"offset-md-2\", \"col-md-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"disabled\"], [1, \"text-danger\"]],\n  template: function CategoryAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2, \" Add New Category \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function CategoryAddComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.addCategory();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Category Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function CategoryAddComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.newCategory.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, CategoryAddComponent_div_10_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 9)(13, \"button\", 10);\n      i0.ɵɵtext(14, \" Save \");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCategory.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.name.invalid && (ctx.nameField.dirty || ctx.nameField.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CategoryAddComponent };","map":{"version":3,"names":["HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CategoryAddComponent","constructor","http","authService","router","newCategory","id","name","ngOnInit","addCategory","form","invalid","token","getToken","headers","set","apiUrl","post","subscribe","response","console","log","navigate","error","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","i3","Router","selectors","decls","vars","consts","template","CategoryAddComponent_Template","rf","ctx","ɵɵlistener","CategoryAddComponent_Template_form_ngSubmit_4_listener","CategoryAddComponent_Template_input_ngModelChange_9_listener","$event","ɵɵtemplate","CategoryAddComponent_div_10_Template","ɵɵadvance","ɵɵproperty","nameField","dirty","touched"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category-add\\category-add.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category-add\\category-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Category } from '../category.model';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms'; // Import NgForm\n\n@Component({\n  selector: 'app-category-add',\n  templateUrl: './category-add.component.html',\n  styleUrls: ['./category-add.component.css']\n})\nexport class CategoryAddComponent implements OnInit {\n  newCategory: Category = {\n    id: 0,\n    name: ''\n  };\n\n  constructor(private http: HttpClient, private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  addCategory(form: NgForm): void {\n    if (form.invalid) {\n      // Form is invalid, don't submit\n      return;\n    }\n\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    const apiUrl = 'http://127.0.0.1:8000/api/add-category';\n    this.http.post(apiUrl, this.newCategory, { headers }).subscribe(\n      (response: any) => {\n        console.log('Category added:', response);\n        this.router.navigate(['/products']);\n      },\n      (error: any) => {\n        console.error('Error adding category:', error);\n      }\n    );\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    Add New Category\n  </div>\n  <div class=\"card-body\">\n    <form novalidate (ngSubmit)=\"addCategory()\">\n      <div class=\"form-group row mb-2\">\n        <label class=\"col-md-2 col-form-label\" for=\"name\">Category Name:</label>\n        <div class=\"col-md-8\">\n          <input class=\"form-control\" type=\"text\" id=\"name\" [(ngModel)]=\"newCategory.name\" name=\"name\" required>\n          <!-- Add a validation message -->\n          <div *ngIf=\"name.invalid && (nameField.dirty || nameField.touched)\" class=\"text-danger\">\n            Category name is required.\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group row mb-2\">\n        <div class=\"offset-md-2 col-md-4\">\n          <button class=\"btn btn-primary mr-3\" style=\"width:80px;\" type=\"submit\" [disabled]=\"form.invalid\">\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
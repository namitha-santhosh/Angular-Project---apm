{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nlet AdminComponent = class AdminComponent {\n  constructor(authService, router, sanitizer, http // Inject HttpClient\n  ) {\n    this.authService = authService;\n    this.router = router;\n    this.sanitizer = sanitizer;\n    this.http = http;\n  }\n  ngOnInit() {\n    const token = this.authService.getToken();\n    const adminUrl = 'http://127.0.0.1:8000/admin'; // Replace with your EasyAdminBundle URL\n    // Set the JWT token in the Authorization header\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    // Make the HTTP request with headers\n    this.http.get(adminUrl, {\n      headers\n    }).subscribe(response => {\n      //this.iframeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${adminUrl}`);\n    }, error => {\n      console.error('Error fetching admin data', error);\n      if (error.status === 401) {\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n};\nAdminComponent = __decorate([Component({\n  selector: 'pm-admin',\n  templateUrl: `\n    <iframe [src]=\"iframeUrl\" width=\"100%\" height=\"600\"></iframe>\n  `,\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };","map":{"version":3,"names":["Component","HttpHeaders","AdminComponent","constructor","authService","router","sanitizer","http","ngOnInit","token","getToken","adminUrl","headers","set","get","subscribe","response","error","console","status","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\admin\\admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { HttpClient, HttpHeaders } from '@angular/common/http'; \n\n@Component({\n  selector: 'pm-admin',\n  templateUrl: `\n    <iframe [src]=\"iframeUrl\" width=\"100%\" height=\"600\"></iframe>\n  `,\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  iframeUrl: SafeResourceUrl | undefined;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private sanitizer: DomSanitizer,\n    private http: HttpClient // Inject HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    const token = this.authService.getToken();\n    const adminUrl = 'http://127.0.0.1:8000/admin'; // Replace with your EasyAdminBundle URL\n\n    // Set the JWT token in the Authorization header\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n\n    // Make the HTTP request with headers\n    this.http.get(adminUrl, { headers }).subscribe(\n      (response: any) => {\n        //this.iframeUrl = this.sanitizer.bypassSecurityTrustResourceUrl(`${adminUrl}`);\n      },\n      (error) => {\n        console.error('Error fetching admin data', error);\n        if (error.status === 401) {\n          this.router.navigate(['/login']);\n        }\n      }\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAIjD,SAAqBC,WAAW,QAAQ,sBAAsB;AAS9D,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAGzBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,SAAuB,EACvBC,IAAgB,CAAC;EAAA,E;IAHjB,KAAAH,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,IAAI,GAAJA,IAAI;EACX;EAEHC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,IAAI,CAACL,WAAW,CAACM,QAAQ,EAAE;IACzC,MAAMC,QAAQ,GAAG,6BAA6B,CAAC,CAAC;IAEhD;IACA,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IAEzE;IACA,IAAI,CAACF,IAAI,CAACO,GAAG,CAACH,QAAQ,EAAE;MAAEC;IAAO,CAAE,CAAC,CAACG,SAAS,CAC3CC,QAAa,IAAI;MAChB;IAAA,CACD,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,IAAIA,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;IAEpC,CAAC,CACF;EACH;CACD;AA9BYlB,cAAc,GAAAmB,UAAA,EAP1BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;;GAEZ;EACDC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWtB,cAAc,CA8B1B;SA9BYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass CanDeactivateGuard {\n  canDeactivate(component, currentRoute, currentState) {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n_class = CanDeactivateGuard;\n_class.ɵfac = function CanDeactivateGuard_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { CanDeactivateGuard };","map":{"version":3,"names":["CanDeactivateGuard","canDeactivate","component","currentRoute","currentState","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-edit.guard.ts"],"sourcesContent":["/* import { Injectable } from '@angular/core';\r\nimport { CanDeactivate } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ProductEditComponent } from './product-edit.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductEditGuard implements CanDeactivate<ProductEditComponent> {\r\n  canDeactivate(component: ProductEditComponent): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (component.productForm.dirty) {\r\n      const productName = component.productForm.get('productName')?.value || 'New Product';\r\n      return confirm(`Navigate away and lose all changes to ${productName}?`);\r\n    }\r\n    return true;\r\n  }\r\n} */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CanDeactivateGuard\r\n  implements CanDeactivate<CanComponentDeactivate>\r\n{\r\n  canDeactivate(\r\n    component: CanComponentDeactivate,\r\n    currentRoute: ActivatedRouteSnapshot,\r\n    currentState: RouterStateSnapshot\r\n  ): boolean {\r\n    return component.canDeactivate ? component.canDeactivate() : true;\r\n  }\r\n}\r\n\r\n"],"mappings":";;AA8BA,MAGaA,kBAAkB;EAG7BC,aAAaA,CACXC,SAAiC,EACjCC,YAAoC,EACpCC,YAAiC;IAEjC,OAAOF,SAAS,CAACD,aAAa,GAAGC,SAAS,CAACD,aAAa,EAAE,GAAG,IAAI;EACnE;;SATWD,kBAAkB;;mBAAlBA,MAAkB;AAAA;;SAAlBA,MAAkB;EAAAK,OAAA,EAAlBL,MAAkB,CAAAM,IAAA;EAAAC,UAAA,EAFjB;AAAM;SAEPP,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
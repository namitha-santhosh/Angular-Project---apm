{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CategoryComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r2.name);\n  }\n}\nfunction CategoryComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r3.productName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r3.productCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind4(7, 3, product_r3.price, \"USD\", true, \"1.2-2\"));\n  }\n}\nclass CategoryComponent {\n  constructor(http, route) {\n    this.http = http;\n    this.route = route;\n    this.products = []; // Array to store fetched products\n    this.categoryId = null;\n    this.categories = [];\n  }\n  ngOnInit() {\n    // Use optional chaining to access the 'id' parameter safely\n    const idParam = this.route.snapshot.paramMap.get('id');\n    this.categoryId = idParam ? parseInt(idParam, 10) : null;\n    if (this.categoryId !== null) {\n      // Replace 'your-api-endpoint' with the actual URL of your Symfony API\n      const apiUrl = `http://127.0.0.1:8000/category/${this.categoryId}`;\n      // Make an HTTP GET request to fetch products by category\n      this.http.get(apiUrl).subscribe(data => {\n        this.products = data; // Assuming your API returns an array of products\n      });\n    }\n  }\n}\n_class = CategoryComponent;\n_class.ɵfac = function CategoryComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"pm-category\"]],\n  decls: 25,\n  vars: 3,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-4\"], [1, \"form-group\"], [\"for\", \"categorySelect\"], [\"id\", \"categorySelect\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-8\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function CategoryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Products by Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Select Category:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"select\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CategoryComponent_Template_select_ngModelChange_8_listener($event) {\n        return ctx.selectedCategoryId = $event;\n      })(\"change\", function CategoryComponent_Template_select_change_8_listener() {\n        return ctx.onCategoryChange();\n      });\n      i0.ɵɵtemplate(9, CategoryComponent_option_9_Template, 2, 2, \"option\", 6);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 7)(12, \"h2\");\n      i0.ɵɵtext(13, \"Products in Selected Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"table\", 8)(15, \"thead\")(16, \"tr\")(17, \"th\");\n      i0.ɵɵtext(18, \"Product Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Product Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Price\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"tbody\");\n      i0.ɵɵtemplate(24, CategoryComponent_tr_24_Template, 8, 8, \"tr\", 9);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedCategoryId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.products);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i3.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CategoryComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","category_r2","id","ɵɵadvance","ɵɵtextInterpolate","name","product_r3","productName","productCode","ɵɵpipeBind4","price","CategoryComponent","constructor","http","route","products","categoryId","categories","ngOnInit","idParam","snapshot","paramMap","get","parseInt","apiUrl","subscribe","data","ɵɵdirectiveInject","i1","HttpClient","i2","ActivatedRoute","selectors","decls","vars","consts","template","CategoryComponent_Template","rf","ctx","ɵɵlistener","CategoryComponent_Template_select_ngModelChange_8_listener","$event","selectedCategoryId","CategoryComponent_Template_select_change_8_listener","onCategoryChange","ɵɵtemplate","CategoryComponent_option_9_Template","CategoryComponent_tr_24_Template"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category\\category.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category\\category.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'pm-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent implements OnInit {\n  products: any[] = []; // Array to store fetched products\n  categoryId: number | null = null;\n  categories: any[] = [];\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    // Use optional chaining to access the 'id' parameter safely\n    const idParam = this.route.snapshot.paramMap.get('id');\n    this.categoryId = idParam ? parseInt(idParam, 10) : null;\n\n    if (this.categoryId !== null) {\n      // Replace 'your-api-endpoint' with the actual URL of your Symfony API\n      const apiUrl = `http://127.0.0.1:8000/category/${this.categoryId}`;\n\n      // Make an HTTP GET request to fetch products by category\n      this.http.get(apiUrl).subscribe((data: any) => {\n        this.products = data; // Assuming your API returns an array of products\n      });\n    }\n  }\n}\n","<div class=\"container mt-4\">\n    <h1>Products by Category</h1>\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <!-- Category selection dropdown -->\n        <div class=\"form-group\">\n          <label for=\"categorySelect\">Select Category:</label>\n          <select class=\"form-control\" id=\"categorySelect\" [(ngModel)]=\"selectedCategoryId\" (change)=\"onCategoryChange()\">\n            <option *ngFor=\"let category of categories\" [value]=\"category.id\">{{ category.name }}</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <h2>Products in Selected Category</h2>\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th>Product Code</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let product of products\">\n              <td>{{ product.productName }}</td>\n              <td>{{ product.productCode }}</td>\n              <td>{{ product.price | currency:'USD':true:'1.2-2' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Validators } from '@angular/forms';\nfunction phoneNumberValidator(control) {\n  const phoneNumberPattern = /^[0-9]{10}$/; // You can adjust this pattern as needed\n  const valid = phoneNumberPattern.test(control.value);\n  return valid ? null : {\n    invalidPhoneNumber: true\n  };\n}\nexport class SignupPageComponent {\n  constructor(formBuilder, http, router) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.signUpForm = this.formBuilder.group({\n      fname: [\"\", Validators.required],\n      phone: [\"\", Validators.required, phoneNumberValidator],\n      email: [\"\", [Validators.required, Validators.email]],\n      password: [\"\", [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  signUp() {\n    if (this.signUpForm.valid) {\n      console.log(this.signUpForm.value);\n      this.http.post(\"http://localhost:3000/signupUsersList\", this.signUpForm.value).subscribe({\n        next: res => {\n          alert('Sign Up Successful');\n          this.signUpForm.reset();\n          this.router.navigate([\"login\"]);\n        },\n        error: err => {\n          alert(\"Something went wrong\");\n        }\n      });\n    } else {\n      alert(\"Please enter all the required values.\");\n    }\n  }\n}","map":{"version":3,"names":["Validators","phoneNumberValidator","control","phoneNumberPattern","valid","test","value","invalidPhoneNumber","SignupPageComponent","constructor","formBuilder","http","router","ngOnInit","signUpForm","group","fname","required","phone","email","password","minLength","signUp","console","log","post","subscribe","next","res","alert","reset","navigate","error","err"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\signup-page\\signup-page.component.ts"],"sourcesContent":["\r\nimport { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { phoneNumberValidator } from '../shared/phoneno.validator';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.css']\r\n})\r\n\r\nfunction phoneNumberValidator(control: FormControl) {\r\n  const phoneNumberPattern = /^[0-9]{10}$/; // You can adjust this pattern as needed\r\n  const valid = phoneNumberPattern.test(control.value);\r\n  return valid ? null : { invalidPhoneNumber: true };\r\n}\r\nexport class SignupPageComponent {\r\n  public signUpForm!: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, private http: HttpClient, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.signUpForm = this.formBuilder.group({\r\n      fname: [\"\", Validators.required],\r\n      phone: [\"\", Validators.required, phoneNumberValidator],\r\n      email: [\"\", [Validators.required, Validators.email]],\r\n      password: [\"\", [Validators.required, Validators.minLength(5)]]\r\n    });\r\n  }\r\n\r\n  signUp() {\r\n    if (this.signUpForm.valid) {\r\n      console.log(this.signUpForm.value);\r\n      this.http.post<any>(\"http://localhost:3000/signupUsersList\", this.signUpForm.value).subscribe({\r\n        next: (res) => {\r\n          alert('Sign Up Successful');\r\n          this.signUpForm.reset();\r\n          this.router.navigate([\"login\"]);\r\n        },\r\n        error: (err) => {\r\n          alert(\"Something went wrong\");\r\n        }\r\n      });\r\n    } else {\r\n      alert(\"Please enter all the required values.\");\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;AAKnE,SAMSC,oBAAoBA,CAACC,OAAoB;EAChD,MAAMC,kBAAkB,GAAG,aAAa,CAAC,CAAC;EAC1C,MAAMC,KAAK,GAAGD,kBAAkB,CAACE,IAAI,CAACH,OAAO,CAACI,KAAK,CAAC;EACpD,OAAOF,KAAK,GAAG,IAAI,GAAG;IAAEG,kBAAkB,EAAE;EAAI,CAAE;AACpD;AACA,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,WAAwB,EAAUC,IAAgB,EAAUC,MAAc;IAA1E,KAAAF,WAAW,GAAXA,WAAW;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEjGC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACvCC,KAAK,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACiB,QAAQ,CAAC;MAChCC,KAAK,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACiB,QAAQ,EAAEhB,oBAAoB,CAAC;MACtDkB,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACmB,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACpB,UAAU,CAACiB,QAAQ,EAAEjB,UAAU,CAACqB,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACR,UAAU,CAACV,KAAK,EAAE;MACzBmB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAACR,KAAK,CAAC;MAClC,IAAI,CAACK,IAAI,CAACc,IAAI,CAAM,uCAAuC,EAAE,IAAI,CAACX,UAAU,CAACR,KAAK,CAAC,CAACoB,SAAS,CAAC;QAC5FC,IAAI,EAAGC,GAAG,IAAI;UACZC,KAAK,CAAC,oBAAoB,CAAC;UAC3B,IAAI,CAACf,UAAU,CAACgB,KAAK,EAAE;UACvB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACbJ,KAAK,CAAC,sBAAsB,CAAC;QAC/B;OACD,CAAC;KACH,MAAM;MACLA,KAAK,CAAC,uCAAuC,CAAC;;EAElD"},"metadata":{},"sourceType":"module","externalDependencies":[]}
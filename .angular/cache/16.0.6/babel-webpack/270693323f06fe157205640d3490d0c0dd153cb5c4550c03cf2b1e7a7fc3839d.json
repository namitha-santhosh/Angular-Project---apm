{"ast":null,"code":"var _class;\nimport { catchError, tap, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  getActors() {\n    return this.http.get(this.apiUrl).pipe(tap(data => console.log(JSON.stringify(data))), catchError(this.handleError));\n  }\n  handleError(err) {\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    }\n    console.error(errorMessage);\n    return throwError(() => errorMessage);\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiService };","map":{"version":3,"names":["catchError","tap","throwError","ApiService","constructor","http","getActors","get","apiUrl","pipe","data","console","log","JSON","stringify","handleError","err","errorMessage","error","ErrorEvent","message","status","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\test\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, catchError, tap, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n    apiUrl!: 'http://127.0.0.1:8000/api/actor';\r\n    \r\n    constructor(private http: HttpClient) { }\r\n\r\n  getActors(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.apiUrl)\r\n      .pipe(\r\n        tap(data => console.log(JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse): Observable<never> {\r\n    let errorMessage = '';\r\n    if (err.error instanceof ErrorEvent) {\r\n      errorMessage = `An error occurred: ${err.error.message}`;\r\n    } else {\r\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n    }\r\n    console.error(errorMessage);\r\n    return throwError(() => errorMessage);\r\n  }\r\n}"],"mappings":";AAEA,SAAqBA,UAAU,EAAEC,GAAG,EAAEC,UAAU,QAAQ,MAAM;;;AAE9D,MAGaC,UAAU;EAInBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAE1CC,SAASA,CAAA;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC,CACrCC,IAAI,CACHR,GAAG,CAACS,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,EAC9CV,UAAU,CAAC,IAAI,CAACe,WAAW,CAAC,CAC7B;EACL;EAEQA,WAAWA,CAACC,GAAsB;IACxC,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,GAAG,CAACE,KAAK,YAAYC,UAAU,EAAE;MACnCF,YAAY,GAAG,sBAAsBD,GAAG,CAACE,KAAK,CAACE,OAAO,EAAE;KACzD,MAAM;MACLH,YAAY,GAAG,yBAAyBD,GAAG,CAACK,MAAM,uBAAuBL,GAAG,CAACI,OAAO,EAAE;;IAExFT,OAAO,CAACO,KAAK,CAACD,YAAY,CAAC;IAC3B,OAAOf,UAAU,CAAC,MAAMe,YAAY,CAAC;EACvC;;SAvBWd,UAAU;;mBAAVA,MAAU,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAVtB,MAAU;EAAAuB,OAAA,EAAVvB,MAAU,CAAAwB,IAAA;EAAAC,UAAA,EAFT;AAAM;SAEPzB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}
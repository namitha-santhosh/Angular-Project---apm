{"ast":null,"code":"var _class;\nimport { ElementRef } from '@angular/core';\nimport { FormControl, Validators, FormControlName } from '@angular/forms';\nimport { fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NumberValidators } from '../shared/number.validator';\nimport { GenericValidator } from '../shared/generic-validator';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./product.service\";\nimport * as i4 from \"../auth.service\";\nimport * as i5 from \"@angular/common/http\";\nimport * as i6 from \"@angular/common\";\nfunction ProductEditComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 36);\n    i0.ɵɵtext(2, \"Tag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵelement(4, \"input\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ProductEditComponent_div_48_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTag(i_r4));\n    });\n    i0.ɵɵtext(6, \"Delete Tag \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", i_r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", i_r4)(\"formControlName\", i_r4);\n  }\n}\nfunction ProductEditComponent_option_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", category_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r7.name);\n  }\n}\nfunction ProductEditComponent_div_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.errorMessage, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/products\"];\n};\nclass ProductEditComponent {\n  get tags() {\n    return this.productForm.get('tags');\n  }\n  constructor(fb, route, router, productService, authService, http) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.productService = productService;\n    this.authService = authService;\n    this.http = http;\n    this.pageTitle = 'Product Edit';\n    this.errorMessage = '';\n    this.selectedImageFile = null;\n    // Use with the generic validation message class\n    this.displayMessage = {};\n    // Add a property to store the selected category\n    this.selectedCategoryId = null;\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      productName: {\n        required: 'Product name is required.',\n        minlength: 'Product name must be at least three characters.',\n        maxlength: 'Product name cannot exceed 50 characters.'\n      },\n      productCode: {\n        required: 'Product code is required.'\n      },\n      starRating: {\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\n      }\n    };\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n  ngOnInit() {\n    this.productForm = this.fb.group({\n      productName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      productCode: ['', Validators.required],\n      starRating: ['', NumberValidators.range(1, 5)],\n      releaseDate: [''],\n      price: [''],\n      imageFile: [],\n      //imageUrl: [''],\n      tags: this.fb.array([]),\n      description: ''\n    });\n    // Read the product Id from the route parameter\n    this.sub = this.route.paramMap.subscribe(params => {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      this.getProduct(id);\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  ngAfterViewInit() {\n    // Watch for the blur event from any input element on the form.\n    // This is required because the valueChanges does not provide notification on blur\n    const controlBlurs = this.formInputElements.map(formControl => fromEvent(formControl.nativeElement, 'blur'));\n    // Merge the blur event observable with the valueChanges observable\n    // so we only need to subscribe once.\n    merge(this.productForm.valueChanges, ...controlBlurs).pipe(debounceTime(800)).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.productForm);\n    });\n  }\n  addTag() {\n    this.tags.push(new FormControl());\n  }\n  deleteTag(index) {\n    this.tags.removeAt(index);\n    this.tags.markAsDirty();\n  }\n  getProduct(id) {\n    console.log(id);\n    this.productService.getProduct(id).subscribe({\n      next: product => this.displayProduct(product),\n      error: err => this.errorMessage = err\n    });\n  }\n  displayProduct(product) {\n    if (this.productForm) {\n      this.productForm.reset();\n    }\n    this.product = product;\n    if (this.product.id === 0) {\n      this.pageTitle = 'Add Product';\n    } else {\n      this.pageTitle = `Edit Product: ${this.product.productName}`;\n    }\n    // Update the data on the form\n    this.productForm.patchValue({\n      productName: this.product.productName,\n      productCode: this.product.productCode,\n      starRating: this.product.starRating,\n      releaseDate: this.product.releaseDate,\n      price: this.product.price,\n      imageUrl: this.product.imageUrl,\n      description: this.product.description\n    });\n    this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\n  }\n  deleteProduct() {\n    if (this.product.id === 0) {\n      // Don't delete, it was never saved.\n      this.onSaveComplete();\n    } else if (this.product.id) {\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\n        this.productService.deleteProduct(this.product.id).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      }\n    }\n  }\n  onImageChange(event) {\n    const file = event.target.files[0];\n    this.selectedImageFile = file;\n  }\n  // Fetch categories from your API (replace with your actual API endpoint)\n  fetchCategories() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    this.http.get('http://127.0.0.1:8000/api/category', {\n      headers\n    }).subscribe(data => {\n      this.categories = data;\n    });\n  }\n  saveProduct() {\n    if (this.productForm.valid && this.productForm.dirty) {\n      const productData = {\n        ...this.product,\n        ...this.productForm.value\n      };\n      console.log('Selected Image File:', this.selectedImageFile);\n      console.log('selected image name:', this.selectedImageFile?.name);\n      const formData = new FormData();\n      formData.append('productName', productData.productName);\n      formData.append('productCode', productData.productCode);\n      formData.append('starRating', productData.starRating.toString());\n      formData.append('description', productData.description);\n      formData.append('price', productData.price.toString());\n      formData.append('releaseDate', productData.releaseDate);\n      if (this.selectedImageFile) {\n        formData.append('image', this.selectedImageFile, this.selectedImageFile.name);\n      }\n      if (productData.id === 0) {\n        this.productService.createProductWithImage(formData).subscribe(response => {\n          console.log('Create Product Response:', response);\n          this.onSaveComplete();\n        }, error => {\n          console.error('Error creating product:', error);\n          this.errorMessage = 'Error creating product.';\n        });\n      } else if (this.selectedImageFile) {\n        // Update with image\n        this.productService.updateProductWithImage(productData.id, formData).subscribe(response => {\n          console.log('Update Product with Image Response:', response);\n          this.onSaveComplete();\n        }, error => {\n          console.error('Error updating product with image:', error);\n          this.errorMessage = 'Error updating product with image.';\n        });\n      } else {\n        // Update without image\n        this.productService.updateProduct(productData).subscribe(response => {\n          console.log('Update Product Response:', response);\n          this.onSaveComplete();\n        }, error => {\n          console.error('Error updating product:', error);\n          this.errorMessage = 'Error updating product.';\n        });\n      }\n    } else {\n      this.errorMessage = 'Please correct the validation errors.';\n    }\n  }\n  onSaveComplete() {\n    // Reset the form to clear the flags\n    this.productForm.reset();\n    this.router.navigate(['/products']);\n  }\n}\n_class = ProductEditComponent;\n_class.ɵfac = function ProductEditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.HttpClient));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-component\"]],\n  viewQuery: function ProductEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(FormControlName, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formInputElements = _t);\n    }\n  },\n  decls: 76,\n  vars: 39,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\", \"mb-2\"], [\"for\", \"productNameId\", 1, \"col-md-2\", \"col-form-label\"], [1, \"col-md-8\"], [\"id\", \"productNameId\", \"type\", \"text\", \"placeholder\", \"Name (required)\", \"formControlName\", \"productName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"productCodeId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"productCodeId\", \"type\", \"text\", \"placeholder\", \"Code (required)\", \"formControlName\", \"productCode\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"starRatingId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"starRatingId\", \"type\", \"text\", \"placeholder\", \"Rating (1-5)\", \"formControlName\", \"starRating\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"releaseDate\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"releaseDate\", \"type\", \"text\", \"placeholder\", \"Enter Release Date\", \"formControlName\", \"releaseDate\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"price\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"price\", \"type\", \"text\", \"placeholder\", \"Enter Price\", \"formControlName\", \"price\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"imageFile\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"imageFile\", \"type\", \"file\", \"accept\", \".jpg, .jpeg, .png\", 1, \"form-control\", 3, \"ngClass\", \"change\"], [\"formArrayName\", \"tags\"], [\"class\", \"form-group row mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-md-2\", \"mb-2\"], [\"type\", \"button\", \"title\", \"Add a search tag\", 1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", 3, \"click\"], [\"for\", \"descriptionId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"descriptionId\", \"placeholder\", \"Description\", \"rows\", \"3\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-group\"], [\"for\", \"categoryId\"], [\"id\", \"categoryId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"offset-md-2\", \"col-md-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"title\", \"disabled\"], [\"type\", \"button\", \"title\", \"Cancel your edits\", 1, \"btn\", \"btn-outline-secondary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"routerLink\"], [\"type\", \"button\", \"title\", \"Delete this product\", 1, \"btn\", \"btn-outline-warning\", 2, \"width\", \"80px\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"col-md-2\", \"col-form-label\"], [\"type\", \"text\", \"placeholder\", \"Tag\", 1, \"form-control\", 3, \"id\", \"formControlName\"], [\"type\", \"button\", \"title\", \"Delete this search tag\", 1, \"col-md-1\", \"btn\", \"btn-outline-warning\", \"btn-sm\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n  template: function ProductEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductEditComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.saveProduct();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Product Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementStart(10, \"span\", 8);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Product Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6);\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"span\", 8);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Star Rating (1-5)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 6);\n      i0.ɵɵelement(23, \"input\", 12);\n      i0.ɵɵelementStart(24, \"span\", 8);\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 13);\n      i0.ɵɵtext(28, \"Release Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\", 6);\n      i0.ɵɵelement(30, \"input\", 14);\n      i0.ɵɵelementStart(31, \"span\", 8);\n      i0.ɵɵtext(32);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 4)(34, \"label\", 15);\n      i0.ɵɵtext(35, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 6);\n      i0.ɵɵelement(37, \"input\", 16);\n      i0.ɵɵelementStart(38, \"span\", 8);\n      i0.ɵɵtext(39);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(40, \"div\", 4)(41, \"label\", 17);\n      i0.ɵɵtext(42, \"Image Upload\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"div\", 6)(44, \"input\", 18);\n      i0.ɵɵlistener(\"change\", function ProductEditComponent_Template_input_change_44_listener($event) {\n        return ctx.onImageChange($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"span\", 8);\n      i0.ɵɵtext(46);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(47, \"div\", 19);\n      i0.ɵɵtemplate(48, ProductEditComponent_div_48_Template, 7, 3, \"div\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 21)(50, \"div\", 22)(51, \"button\", 23);\n      i0.ɵɵlistener(\"click\", function ProductEditComponent_Template_button_click_51_listener() {\n        return ctx.addTag();\n      });\n      i0.ɵɵtext(52, \"Add Tag \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(53, \"div\", 4)(54, \"label\", 24);\n      i0.ɵɵtext(55, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"div\", 6);\n      i0.ɵɵelement(57, \"textarea\", 25);\n      i0.ɵɵelementStart(58, \"span\", 8);\n      i0.ɵɵtext(59);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(60, \"div\", 26)(61, \"label\", 27);\n      i0.ɵɵtext(62, \"Select Category:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(63, \"select\", 28);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductEditComponent_Template_select_ngModelChange_63_listener($event) {\n        return ctx.selectedCategoryId = $event;\n      });\n      i0.ɵɵelementStart(64, \"option\", 29);\n      i0.ɵɵtext(65, \"Select a Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(66, ProductEditComponent_option_66_Template, 2, 2, \"option\", 30);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(67, \"div\", 4)(68, \"div\", 31)(69, \"button\", 32);\n      i0.ɵɵtext(70, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(71, \"button\", 33);\n      i0.ɵɵtext(72, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(73, \"button\", 34);\n      i0.ɵɵlistener(\"click\", function ProductEditComponent_Template_button_click_73_listener() {\n        return ctx.deleteProduct();\n      });\n      i0.ɵɵtext(74, \" Delete \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(75, ProductEditComponent_div_75_Template, 2, 1, \"div\", 35);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.pageTitle, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ctx.displayMessage.productName));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.productName, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c0, ctx.displayMessage.productCode));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.productCode, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c0, ctx.displayMessage.starRating));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.starRating, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(30, _c0, ctx.displayMessage.releaseDate));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.releaseDate, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(32, _c0, ctx.displayMessage.price));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.price, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(34, _c0, ctx.displayMessage.imageUrl));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.imageUrl, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tags.controls);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(36, _c0, ctx.displayMessage.description));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.description, \" \");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedCategoryId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", null);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"title\", ctx.productForm.valid ? \"Save your entered data\" : \"Disabled until the form data is valid\")(\"disabled\", !ctx.productForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(38, _c1));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.NgModel, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName, i2.RouterLink],\n  encapsulation: 2\n});\nexport { ProductEditComponent };","map":{"version":3,"names":["ElementRef","FormControl","Validators","FormControlName","fromEvent","merge","debounceTime","NumberValidators","GenericValidator","HttpHeaders","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ProductEditComponent_div_48_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r6","i_r4","index","ctx_r5","ɵɵnextContext","ɵɵresetView","deleteTag","ɵɵadvance","ɵɵattribute","ɵɵproperty","category_r7","id","ɵɵtextInterpolate","name","ɵɵtextInterpolate1","ctx_r2","errorMessage","ProductEditComponent","tags","productForm","get","constructor","fb","route","router","productService","authService","http","pageTitle","selectedImageFile","displayMessage","selectedCategoryId","validationMessages","productName","required","minlength","maxlength","productCode","starRating","range","genericValidator","ngOnInit","group","minLength","maxLength","releaseDate","price","imageFile","array","description","sub","paramMap","subscribe","params","Number","snapshot","getProduct","ngOnDestroy","unsubscribe","ngAfterViewInit","controlBlurs","formInputElements","map","formControl","nativeElement","valueChanges","pipe","value","processMessages","addTag","push","removeAt","markAsDirty","console","log","next","product","displayProduct","error","err","reset","patchValue","imageUrl","setControl","deleteProduct","onSaveComplete","confirm","onImageChange","event","file","target","files","fetchCategories","token","getToken","headers","set","data","categories","saveProduct","valid","dirty","productData","formData","FormData","append","toString","createProductWithImage","response","updateProductWithImage","updateProduct","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","ProductService","i4","AuthService","i5","HttpClient","selectors","viewQuery","ProductEditComponent_Query","rf","ctx","ProductEditComponent_Template_form_ngSubmit_4_listener","ProductEditComponent_Template_input_change_44_listener","$event","ɵɵtemplate","ProductEditComponent_div_48_Template","ProductEditComponent_Template_button_click_51_listener","ProductEditComponent_Template_select_ngModelChange_63_listener","ProductEditComponent_option_66_Template","ProductEditComponent_Template_button_click_73_listener","ProductEditComponent_div_75_Template","ɵɵpureFunction1","_c0","controls","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-edit.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-edit.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\n\r\nimport { NumberValidators } from '../shared/number.validator';\r\nimport { GenericValidator } from '../shared/generic-validator';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({\r\n  templateUrl: './product-edit.component.html'\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements!: ElementRef[];\r\n  pageTitle = 'Product Edit';\r\n  errorMessage = '';\r\n  productForm!: FormGroup;\r\n\r\n  product!: Product;\r\n  private sub!: Subscription;\r\n\r\n  selectedImageFile: File | null = null;\r\n\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n\r\n  get tags(): FormArray {\r\n    return this.productForm.get('tags') as FormArray;\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private productService: ProductService,\r\n              private authService: AuthService,\r\n              private http: HttpClient\r\n              ) {\r\n\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      productName: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        maxlength: 'Product name cannot exceed 50 characters.'\r\n      },\r\n      productCode: {\r\n        required: 'Product code is required.'\r\n      },\r\n      starRating: {\r\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      }\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.productForm = this.fb.group({\r\n      productName: ['', [Validators.required,\r\n                         Validators.minLength(3),\r\n                         Validators.maxLength(50)]],\r\n      productCode: ['', Validators.required],\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n      releaseDate: [''],\r\n      price: [''],\r\n      imageFile: [],\r\n      //imageUrl: [''],\r\n      tags: this.fb.array([]),\r\n      description: ''\r\n    });\r\n\r\n    // Read the product Id from the route parameter\r\n    this.sub = this.route.paramMap.subscribe(\r\n      params => {\r\n        const id = Number(this.route.snapshot.paramMap.get('id'));\r\n        this.getProduct(id);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements\r\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.productForm.valueChanges, ...controlBlurs).pipe(\r\n      debounceTime(800)\r\n    ).subscribe(value => {\r\n      this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n    });\r\n  }\r\n\r\n  addTag(): void {\r\n    this.tags.push(new FormControl());\r\n  }\r\n\r\n  deleteTag(index: number): void {\r\n    this.tags.removeAt(index);\r\n    this.tags.markAsDirty();\r\n  }\r\n\r\n  getProduct(id: number): void {\r\n    console.log(id)\r\n    this.productService.getProduct(id)\r\n      .subscribe({\r\n        next: (product: Product) => this.displayProduct(product),\r\n        error: err => this.errorMessage = err\r\n      });\r\n  }\r\n\r\n  displayProduct(product: Product): void {\r\n    if (this.productForm) {\r\n      this.productForm.reset();\r\n    }\r\n    this.product = product;\r\n\r\n    if (this.product.id === 0) {\r\n      this.pageTitle = 'Add Product';\r\n    } else {\r\n      this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n    }\r\n\r\n    // Update the data on the form\r\n    this.productForm.patchValue({\r\n      productName: this.product.productName,\r\n      productCode: this.product.productCode,\r\n      starRating: this.product.starRating,\r\n      releaseDate: this.product.releaseDate,\r\n      price: this.product.price,\r\n      imageUrl: this.product.imageUrl,\r\n      description: this.product.description\r\n    });\r\n    this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\r\n  }\r\n\r\n  deleteProduct(): void {\r\n    if (this.product.id === 0) {\r\n      // Don't delete, it was never saved.\r\n      this.onSaveComplete();\r\n    } else if (this.product.id) {\r\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n        this.productService.deleteProduct(this.product.id)\r\n          .subscribe({\r\n            next: () => this.onSaveComplete(),\r\n            error: err => this.errorMessage = err\r\n          });\r\n      }\r\n    }\r\n  }\r\n  \r\n  onImageChange(event: any): void {\r\n  const file = event.target.files[0];\r\n  this.selectedImageFile = file;\r\n  }\r\n  \r\n\r\n  // Add a property to store the selected category\r\n  selectedCategoryId: number | null = null;\r\n\r\n  // Fetch categories from your API (replace with your actual API endpoint)\r\n  fetchCategories(): void {\r\n    const token = this.authService.getToken();\r\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n    this.http.get('http://127.0.0.1:8000/api/category', { headers }).subscribe((data: any) => {\r\n      this.categories = data;\r\n    });\r\n  }\r\n\r\n\r\n\r\n  saveProduct(): void {\r\n    if (this.productForm.valid && this.productForm.dirty) {\r\n      const productData = { ...this.product, ...this.productForm.value };\r\n      console.log('Selected Image File:', this.selectedImageFile);\r\n      console.log('selected image name:', this.selectedImageFile?.name);\r\n      const formData = new FormData();\r\n      formData.append('productName', productData.productName);\r\n      formData.append('productCode', productData.productCode);\r\n      formData.append('starRating', productData.starRating.toString());\r\n      formData.append('description', productData.description);\r\n      formData.append('price', productData.price.toString());\r\n      formData.append('releaseDate', productData.releaseDate);\r\n  \r\n      if (this.selectedImageFile) {\r\n        formData.append('image', this.selectedImageFile, this.selectedImageFile.name);\r\n      }\r\n  \r\n      if (productData.id === 0) {\r\n        this.productService.createProductWithImage(formData)\r\n          .subscribe(\r\n            (response) => {\r\n              console.log('Create Product Response:', response);\r\n              this.onSaveComplete();\r\n            },\r\n            (error) => {\r\n              console.error('Error creating product:', error);\r\n              this.errorMessage = 'Error creating product.';\r\n            }\r\n          );\r\n      } else if (this.selectedImageFile) {\r\n        // Update with image\r\n        this.productService.updateProductWithImage(productData.id, formData)\r\n          .subscribe(\r\n            (response) => {\r\n              console.log('Update Product with Image Response:', response);\r\n              this.onSaveComplete();\r\n            },\r\n            (error) => {\r\n              console.error('Error updating product with image:', error);\r\n              this.errorMessage = 'Error updating product with image.';\r\n            }\r\n          );\r\n      } else {\r\n        // Update without image\r\n        this.productService.updateProduct(productData)\r\n          .subscribe(\r\n            (response) => {\r\n              console.log('Update Product Response:', response);\r\n              this.onSaveComplete();\r\n            },\r\n            (error) => {\r\n              console.error('Error updating product:', error);\r\n              this.errorMessage = 'Error updating product.';\r\n            }\r\n          );\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n  \r\n  \r\n  \r\n\r\n  onSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.productForm.reset();\r\n    this.router.navigate(['/products']);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    {{pageTitle}}\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <form novalidate\r\n          (ngSubmit)=\"saveProduct()\"\r\n          [formGroup]=\"productForm\">\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"productNameId\">Product Name</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"productNameId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Name (required)\"\r\n                 formControlName=\"productName\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.productName }\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.productName}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"productCodeId\">Product Code</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"productCodeId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Code (required)\"\r\n                 formControlName=\"productCode\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.productCode}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.productCode}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"starRatingId\">Star Rating (1-5)</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"starRatingId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Rating (1-5)\"\r\n                 formControlName=\"starRating\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.starRating}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.starRating}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"releaseDate\">Release Date</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"releaseDate\"\r\n                 type=\"text\"\r\n                 placeholder=\"Enter Release Date\"\r\n                 formControlName=\"releaseDate\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.releaseDate}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.releaseDate}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"price\">Price</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"price\"\r\n                 type=\"text\"\r\n                 placeholder=\"Enter Price\"\r\n                 formControlName=\"price\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.price}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.price}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"imageFile\">Image Upload</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"imageFile\"\r\n                 type=\"file\"\r\n                 (change)=\"onImageChange($event)\"\r\n                 accept=\".jpg, .jpeg, .png\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.imageUrl}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.imageUrl}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div formArrayName=\"tags\">\r\n        <div class=\"form-group row mb-2\"\r\n             *ngFor=\"let tag of tags.controls; let i=index\">\r\n          <label class=\"col-md-2 col-form-label\"\r\n                 [attr.for]=\"i\">Tag</label>\r\n\r\n          <div class=\"col-md-8\">\r\n            <input class=\"form-control\"\r\n                   [id]=\"i\"\r\n                   type=\"text\"\r\n                   placeholder=\"Tag\"\r\n                   [formControlName]=\"i\" />\r\n          </div>\r\n          <button class=\"col-md-1 btn btn-outline-warning btn-sm\"\r\n                  type=\"button\"\r\n                  title=\"Delete this search tag\"\r\n                  (click)=\"deleteTag(i)\">Delete Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2 mb-2\">\r\n          <button class=\"btn btn-outline-secondary btn-sm\"\r\n                  type=\"button\"\r\n                  title=\"Add a search tag\"\r\n                  (click)=\"addTag()\">Add Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"descriptionId\">Description</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <textarea class=\"form-control\"\r\n                    id=\"descriptionId\"\r\n                    placeholder=\"Description\"\r\n                    rows=3\r\n                    formControlName=\"description\"\r\n                    [ngClass]=\"{'is-invalid': displayMessage.description}\"></textarea>\r\n          <span class=\"invalid-feedback\">\r\n            {{ displayMessage.description}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <!-- Category selection dropdown -->\r\n      <div class=\"form-group\">\r\n        <label for=\"categoryId\">Select Category:</label>\r\n        <select class=\"form-control\" id=\"categoryId\" [(ngModel)]=\"selectedCategoryId\">\r\n          <option [ngValue]=\"null\">Select a Category</option>\r\n          <option *ngFor=\"let category of categories\" [ngValue]=\"category.id\">{{ category.name }}</option>\r\n        </select>\r\n      </div>\r\n\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <div class=\"offset-md-2 col-md-4\">\r\n          <button class=\"btn btn-primary mr-3\"\r\n                  style=\"width:80px;\"\r\n                  type=\"submit\"\r\n                  [title]=\"productForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                  [disabled]=\"!productForm.valid\">\r\n            Save\r\n          </button>\r\n          <button class=\"btn btn-outline-secondary mr-3\"\r\n                  style=\"width:80px;\"\r\n                  type=\"button\"\r\n                  title=\"Cancel your edits\"\r\n                  [routerLink]=\"['/products']\">\r\n            Cancel\r\n          </button>\r\n          <button class=\"btn btn-outline-warning\"\r\n                  style=\"width:80px\"\r\n                  type=\"button\"\r\n                  title=\"Delete this product\"\r\n                  (click)=\"deleteProduct()\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"alert alert-danger\"\r\n       *ngIf=\"errorMessage\">{{errorMessage}}\r\n  </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/forms\";\nclass CategoryAddComponent {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.newCategory = {\n      id: 0,\n      name: ''\n    };\n  }\n  ngOnInit() {}\n  addCategory() {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n    const apiUrl = 'http://127.0.0.1:8000/api/add-category';\n    this.http.post(apiUrl, this.newCategory, {\n      headers\n    }).subscribe(response => {\n      console.log('Category added:', response);\n    }, error => {\n      console.error('Error adding category:', error);\n    });\n  }\n}\n_class = CategoryAddComponent;\n_class.ɵfac = function CategoryAddComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-category-add\"]],\n  decls: 10,\n  vars: 1,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function CategoryAddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Add a New Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function CategoryAddComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.addCategory();\n      });\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function CategoryAddComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.newCategory.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"button\", 4);\n      i0.ɵɵtext(9, \"Add Category\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.newCategory.name);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CategoryAddComponent };","map":{"version":3,"names":["CategoryAddComponent","constructor","http","authService","newCategory","id","name","ngOnInit","addCategory","token","getToken","headers","HttpHeaders","set","apiUrl","post","subscribe","response","console","log","error","i0","ɵɵdirectiveInject","i1","HttpClient","i2","AuthService","selectors","decls","vars","consts","template","CategoryAddComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CategoryAddComponent_Template_form_ngSubmit_3_listener","CategoryAddComponent_Template_input_ngModelChange_7_listener","$event","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category-add\\category-add.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\category-add\\category-add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; \nimport { Category } from '../category.model';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-category-add',\n  templateUrl: './category-add.component.html',\n  styleUrls: ['./category-add.component.css']\n})\nexport class CategoryAddComponent implements OnInit {\n  newCategory: Category = {\n    id: 0, \n    name: ''\n  };\n\n  constructor(private http: HttpClient, private authService: AuthService) {} \n\n  ngOnInit(): void {}\n\n  addCategory(): void {\n    const token = this.authService.getToken();\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n  \n    const apiUrl = 'http://127.0.0.1:8000/api/add-category'; \n    this.http.post(apiUrl, this.newCategory, { headers }).subscribe(\n      (response: any) => {\n        console.log('Category added:', response);\n      },\n      (error: any) => {\n        console.error('Error adding category:', error);\n      }\n    );\n  }\n}\n\n","<div>\n    <h2>Add a New Category</h2>\n    <form (ngSubmit)=\"addCategory()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" [(ngModel)]=\"newCategory.name\" name=\"name\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Add Category</button>\n    </form>\n  </div>\n"],"mappings":";;;;;AAKA,MAKaA,oBAAoB;EAM/BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;IALzD,KAAAC,WAAW,GAAa;MACtBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE;KACP;EAEwE;EAEzEC,QAAQA,CAAA,GAAU;EAElBC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAG,IAAI,CAACN,WAAW,CAACO,QAAQ,EAAE;IACzC,MAAMC,OAAO,GAAG,IAAIC,WAAW,EAAE,CAACC,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;IAEzE,MAAMK,MAAM,GAAG,wCAAwC;IACvD,IAAI,CAACZ,IAAI,CAACa,IAAI,CAACD,MAAM,EAAE,IAAI,CAACV,WAAW,EAAE;MAAEO;IAAO,CAAE,CAAC,CAACK,SAAS,CAC5DC,QAAa,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;IAC1C,CAAC,EACAG,KAAU,IAAI;MACbF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACH;;SAvBWpB,oBAAoB;;mBAApBA,MAAoB,EAAAqB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;QAApB1B,MAAoB;EAAA2B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjCZ,EAAA,CAAAc,cAAA,UAAK;MACGd,EAAA,CAAAe,MAAA,yBAAkB;MAAAf,EAAA,CAAAgB,YAAA,EAAK;MAC3BhB,EAAA,CAAAc,cAAA,cAAiC;MAA3Bd,EAAA,CAAAiB,UAAA,sBAAAC,uDAAA;QAAA,OAAYL,GAAA,CAAA1B,WAAA,EAAa;MAAA,EAAC;MAC9Ba,EAAA,CAAAc,cAAA,aAAwB;MACJd,EAAA,CAAAe,MAAA,YAAK;MAAAf,EAAA,CAAAgB,YAAA,EAAQ;MAC/BhB,EAAA,CAAAc,cAAA,eAAiF;MAApDd,EAAA,CAAAiB,UAAA,2BAAAE,6DAAAC,MAAA;QAAA,OAAAP,GAAA,CAAA9B,WAAA,CAAAE,IAAA,GAAAmC,MAAA;MAAA,EAA8B;MAA3DpB,EAAA,CAAAgB,YAAA,EAAiF;MAEnFhB,EAAA,CAAAc,cAAA,gBAA8C;MAAAd,EAAA,CAAAe,MAAA,mBAAY;MAAAf,EAAA,CAAAgB,YAAA,EAAS;;;MAFpChB,EAAA,CAAAqB,SAAA,GAA8B;MAA9BrB,EAAA,CAAAsB,UAAA,YAAAT,GAAA,CAAA9B,WAAA,CAAAE,IAAA,CAA8B;;;;;;SDKtDN,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _class;\nimport { ElementRef } from '@angular/core';\nimport { FormControl, Validators, FormControlName } from '@angular/forms';\nimport { fromEvent, merge } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NumberValidators } from '../shared/number.validator';\nimport { GenericValidator } from '../shared/generic-validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./product.service\";\nimport * as i4 from \"./imageUpload.service\";\nimport * as i5 from \"@angular/common\";\nfunction ProductEditComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 28);\n    i0.ɵɵtext(2, \"Tag\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵelement(4, \"input\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ProductEditComponent_div_27_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteTag(i_r4));\n    });\n    i0.ɵɵtext(6, \"Delete Tag \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", i_r4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"id\", i_r4)(\"formControlName\", i_r4);\n  }\n}\nfunction ProductEditComponent_img_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 31);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r1.imageUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ProductEditComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.errorMessage, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nconst _c1 = function () {\n  return [\"/products\"];\n};\nclass ProductEditComponent {\n  get tags() {\n    return this.productForm.get('tags');\n  }\n  constructor(fb, route, router, productService, imageUploadService) {\n    this.fb = fb;\n    this.route = route;\n    this.router = router;\n    this.productService = productService;\n    this.imageUploadService = imageUploadService;\n    this.imageUrl = null;\n    /* onImageSelected(event: any) {\n      const file: File = event.target.files[0];\n      if (file) {\n        // Assuming you have a service to handle image uploads, upload the image and get its URL.\n        // Replace 'uploadImage' with your actual image upload service.\n        this.imageUploadService.uploadImage(file).subscribe((imageUrl: string) => {\n          this.imageUrl = imageUrl;\n        });\n      }\n    } */\n    this.pageTitle = 'Product Edit';\n    this.errorMessage = '';\n    // Use with the generic validation message class\n    this.displayMessage = {};\n    this.imageUrl = '';\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      productName: {\n        required: 'Product name is required.',\n        minlength: 'Product name must be at least three characters.',\n        maxlength: 'Product name cannot exceed 50 characters.'\n      },\n      productCode: {\n        required: 'Product code is required.'\n      },\n      starRating: {\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\n      }\n    };\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n  ngOnInit() {\n    this.productForm = this.fb.group({\n      productName: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(50)]],\n      productCode: ['', Validators.required],\n      starRating: ['', NumberValidators.range(1, 5)],\n      tags: this.fb.array([]),\n      description: ''\n    });\n    // Read the product Id from the route parameter\n    this.sub = this.route.paramMap.subscribe(params => {\n      const id = Number(this.route.snapshot.paramMap.get('id'));\n      this.getProduct(id);\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  ngAfterViewInit() {\n    // Watch for the blur event from any input element on the form.\n    // This is required because the valueChanges does not provide notification on blur\n    const controlBlurs = this.formInputElements.map(formControl => fromEvent(formControl.nativeElement, 'blur'));\n    // Merge the blur event observable with the valueChanges observable\n    // so we only need to subscribe once.\n    merge(this.productForm.valueChanges, ...controlBlurs).pipe(debounceTime(800)).subscribe(value => {\n      this.displayMessage = this.genericValidator.processMessages(this.productForm);\n    });\n  }\n  addTag() {\n    this.tags.push(new FormControl());\n  }\n  deleteTag(index) {\n    this.tags.removeAt(index);\n    this.tags.markAsDirty();\n  }\n  getProduct(id) {\n    console.log(id);\n    this.productService.getProduct(id).subscribe({\n      next: product => this.displayProduct(product),\n      error: err => this.errorMessage = err\n    });\n  }\n  displayProduct(product) {\n    if (this.productForm) {\n      this.productForm.reset();\n    }\n    this.product = product;\n    if (this.product.id === 0) {\n      this.pageTitle = 'Add Product';\n    } else {\n      this.pageTitle = `Edit Product: ${this.product.productName}`;\n    }\n    // Update the data on the form\n    this.productForm.patchValue({\n      productName: this.product.productName,\n      productCode: this.product.productCode,\n      starRating: this.product.starRating,\n      description: this.product.description,\n      imageUrl: this.product.imageUrl\n    });\n    this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\n  }\n  deleteProduct() {\n    if (this.product.id === 0) {\n      // Don't delete, it was never saved.\n      this.onSaveComplete();\n    } else if (this.product.id) {\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\n        this.productService.deleteProduct(this.product.id).subscribe({\n          next: () => this.onSaveComplete(),\n          error: err => this.errorMessage = err\n        });\n      }\n    }\n  }\n  saveProduct() {\n    if (this.productForm.valid) {\n      if (this.productForm.dirty) {\n        const p = {\n          ...this.product,\n          ...this.productForm.value\n        };\n        p['imageUrl'] = this.imageUrl;\n        if (p.id === 0) {\n          this.productService.createProduct(p).subscribe({\n            next: x => {\n              console.log(x);\n              return this.onSaveComplete();\n            },\n            error: err => this.errorMessage = err\n          });\n        } else {\n          this.productService.updateProduct(p).subscribe({\n            next: () => this.onSaveComplete(),\n            error: err => this.errorMessage = err\n          });\n        }\n      } else {\n        this.onSaveComplete();\n      }\n    } else {\n      this.errorMessage = 'Please correct the validation errors.';\n    }\n  }\n  onSaveComplete() {\n    // Reset the form to clear the flags\n    this.productForm.reset();\n    this.router.navigate(['/products']);\n  }\n}\n_class = ProductEditComponent;\n_class.ɵfac = function ProductEditComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ProductService), i0.ɵɵdirectiveInject(i4.ImageUploadService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"ng-component\"]],\n  viewQuery: function ProductEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(FormControlName, 5, ElementRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formInputElements = _t);\n    }\n  },\n  decls: 54,\n  vars: 25,\n  consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\", \"mb-2\"], [\"for\", \"productNameId\", 1, \"col-md-2\", \"col-form-label\"], [1, \"col-md-8\"], [\"id\", \"productNameId\", \"type\", \"text\", \"placeholder\", \"Name (required)\", \"formControlName\", \"productName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"], [\"for\", \"productCodeId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"productCodeId\", \"type\", \"text\", \"placeholder\", \"Code (required)\", \"formControlName\", \"productCode\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"starRatingId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"starRatingId\", \"type\", \"text\", \"placeholder\", \"Rating (1-5)\", \"formControlName\", \"starRating\", 1, \"form-control\", 3, \"ngClass\"], [\"formArrayName\", \"tags\"], [\"class\", \"form-group row mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-md-2\", \"mb-2\"], [\"type\", \"button\", \"title\", \"Add a search tag\", 1, \"btn\", \"btn-outline-secondary\", \"btn-sm\", 3, \"click\"], [\"for\", \"imageId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"imageId\", \"type\", \"file\", 1, \"form-control\", 3, \"change\"], [\"class\", \"img-thumbnail\", \"style\", \"max-width: 100px; max-height: 100px;\", 3, \"src\", 4, \"ngIf\"], [\"for\", \"descriptionId\", 1, \"col-md-2\", \"col-form-label\"], [\"id\", \"descriptionId\", \"placeholder\", \"Description\", \"rows\", \"3\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"ngClass\"], [1, \"offset-md-2\", \"col-md-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"title\", \"disabled\"], [\"type\", \"button\", \"title\", \"Cancel your edits\", 1, \"btn\", \"btn-outline-secondary\", \"mr-3\", 2, \"width\", \"80px\", 3, \"routerLink\"], [\"type\", \"button\", \"title\", \"Delete this product\", 1, \"btn\", \"btn-outline-warning\", 2, \"width\", \"80px\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"col-md-2\", \"col-form-label\"], [\"type\", \"text\", \"placeholder\", \"Tag\", 1, \"form-control\", 3, \"id\", \"formControlName\"], [\"type\", \"button\", \"title\", \"Delete this search tag\", 1, \"col-md-1\", \"btn\", \"btn-outline-warning\", \"btn-sm\", 3, \"click\"], [1, \"img-thumbnail\", 2, \"max-width\", \"100px\", \"max-height\", \"100px\", 3, \"src\"], [1, \"alert\", \"alert-danger\"]],\n  template: function ProductEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductEditComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.saveProduct();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Product Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 6);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementStart(10, \"span\", 8);\n      i0.ɵɵtext(11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Product Code\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 6);\n      i0.ɵɵelement(16, \"input\", 10);\n      i0.ɵɵelementStart(17, \"span\", 8);\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 11);\n      i0.ɵɵtext(21, \"Star Rating (1-5)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 6);\n      i0.ɵɵelement(23, \"input\", 12);\n      i0.ɵɵelementStart(24, \"span\", 8);\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 13);\n      i0.ɵɵtemplate(27, ProductEditComponent_div_27_Template, 7, 3, \"div\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 15)(29, \"div\", 16)(30, \"button\", 17);\n      i0.ɵɵlistener(\"click\", function ProductEditComponent_Template_button_click_30_listener() {\n        return ctx.addTag();\n      });\n      i0.ɵɵtext(31, \"Add Tag \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 4)(33, \"label\", 18);\n      i0.ɵɵtext(34, \"Product Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 6)(36, \"input\", 19);\n      i0.ɵɵlistener(\"change\", function ProductEditComponent_Template_input_change_36_listener($event) {\n        return ctx.onImageSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(37, ProductEditComponent_img_37_Template, 1, 1, \"img\", 20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 4)(39, \"label\", 21);\n      i0.ɵɵtext(40, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 6);\n      i0.ɵɵelement(42, \"textarea\", 22);\n      i0.ɵɵelementStart(43, \"span\", 8);\n      i0.ɵɵtext(44);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(45, \"div\", 4)(46, \"div\", 23)(47, \"button\", 24);\n      i0.ɵɵtext(48, \" Save \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"button\", 25);\n      i0.ɵɵtext(50, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"button\", 26);\n      i0.ɵɵlistener(\"click\", function ProductEditComponent_Template_button_click_51_listener() {\n        return ctx.deleteProduct();\n      });\n      i0.ɵɵtext(52, \" Delete \");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(53, ProductEditComponent_div_53_Template, 2, 1, \"div\", 27);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.pageTitle, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx.displayMessage.productName));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.productName, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.displayMessage.productCode));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.productCode, \" \");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx.displayMessage.starRating));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.starRating, \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tags.controls);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.imageUrl);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx.displayMessage.description));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.displayMessage.description, \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"title\", ctx.productForm.valid ? \"Save your entered data\" : \"Disabled until the form data is valid\")(\"disabled\", !ctx.productForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(24, _c1));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n    }\n  },\n  dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormArrayName, i2.RouterLink],\n  encapsulation: 2\n});\nexport { ProductEditComponent };","map":{"version":3,"names":["ElementRef","FormControl","Validators","FormControlName","fromEvent","merge","debounceTime","NumberValidators","GenericValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ProductEditComponent_div_27_Template_button_click_5_listener","restoredCtx","ɵɵrestoreView","_r6","i_r4","index","ctx_r5","ɵɵnextContext","ɵɵresetView","deleteTag","ɵɵadvance","ɵɵattribute","ɵɵproperty","ctx_r1","imageUrl","ɵɵsanitizeUrl","ɵɵtextInterpolate1","ctx_r2","errorMessage","ProductEditComponent","tags","productForm","get","constructor","fb","route","router","productService","imageUploadService","pageTitle","displayMessage","validationMessages","productName","required","minlength","maxlength","productCode","starRating","range","genericValidator","ngOnInit","group","minLength","maxLength","array","description","sub","paramMap","subscribe","params","id","Number","snapshot","getProduct","ngOnDestroy","unsubscribe","ngAfterViewInit","controlBlurs","formInputElements","map","formControl","nativeElement","valueChanges","pipe","value","processMessages","addTag","push","removeAt","markAsDirty","console","log","next","product","displayProduct","error","err","reset","patchValue","setControl","deleteProduct","onSaveComplete","confirm","saveProduct","valid","dirty","p","createProduct","x","updateProduct","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","Router","i3","ProductService","i4","ImageUploadService","selectors","viewQuery","ProductEditComponent_Query","rf","ctx","ProductEditComponent_Template_form_ngSubmit_4_listener","ɵɵtemplate","ProductEditComponent_div_27_Template","ProductEditComponent_Template_button_click_30_listener","ProductEditComponent_Template_input_change_36_listener","$event","onImageSelected","ProductEditComponent_img_37_Template","ProductEditComponent_Template_button_click_51_listener","ProductEditComponent_div_53_Template","ɵɵpureFunction1","_c0","controls","ɵɵpureFunction0","_c1"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-edit.component.ts","C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\products\\product-edit.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, OnDestroy, ViewChildren, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, FormArray, Validators, FormControlName } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Observable, Subscription, fromEvent, merge } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Product } from './product';\r\nimport { ProductService } from './product.service';\r\nimport { ImageUploadService } from './imageUpload.service';\r\n\r\nimport { NumberValidators } from '../shared/number.validator';\r\nimport { GenericValidator } from '../shared/generic-validator';\r\n\r\n@Component({\r\n  templateUrl: './product-edit.component.html'\r\n})\r\nexport class ProductEditComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements!: ElementRef[];\r\n\r\n\r\n  imageUrl: string | null = null;\r\n\r\n  /* onImageSelected(event: any) {\r\n    const file: File = event.target.files[0];\r\n    if (file) {\r\n      // Assuming you have a service to handle image uploads, upload the image and get its URL.\r\n      // Replace 'uploadImage' with your actual image upload service.\r\n      this.imageUploadService.uploadImage(file).subscribe((imageUrl: string) => {\r\n        this.imageUrl = imageUrl;\r\n      });\r\n    }\r\n  } */\r\n\r\n  pageTitle = 'Product Edit';\r\n  errorMessage = '';\r\n  productForm!: FormGroup;\r\n\r\n  product!: Product;\r\n  private sub!: Subscription;\r\n\r\n  // Use with the generic validation message class\r\n  displayMessage: { [key: string]: string } = {};\r\n  private validationMessages: { [key: string]: { [key: string]: string } };\r\n  private genericValidator: GenericValidator;\r\n\r\n  get tags(): FormArray {\r\n    return this.productForm.get('tags') as FormArray;\r\n  }\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private productService: ProductService,\r\n              private imageUploadService: ImageUploadService) {\r\n\r\n                this.imageUrl = '';\r\n\r\n    // Defines all of the validation messages for the form.\r\n    // These could instead be retrieved from a file or database.\r\n    this.validationMessages = {\r\n      productName: {\r\n        required: 'Product name is required.',\r\n        minlength: 'Product name must be at least three characters.',\r\n        maxlength: 'Product name cannot exceed 50 characters.'\r\n      },\r\n      productCode: {\r\n        required: 'Product code is required.'\r\n      },\r\n      starRating: {\r\n        range: 'Rate the product between 1 (lowest) and 5 (highest).'\r\n      }\r\n    };\r\n\r\n    // Define an instance of the validator for use with this form,\r\n    // passing in this form's set of validation messages.\r\n    this.genericValidator = new GenericValidator(this.validationMessages);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.productForm = this.fb.group({\r\n      productName: ['', [Validators.required,\r\n                         Validators.minLength(3),\r\n                         Validators.maxLength(50)]],\r\n      productCode: ['', Validators.required],\r\n      starRating: ['', NumberValidators.range(1, 5)],\r\n      tags: this.fb.array([]),\r\n      description: ''\r\n    });\r\n\r\n    // Read the product Id from the route parameter\r\n    this.sub = this.route.paramMap.subscribe(\r\n      params => {\r\n        const id = Number(this.route.snapshot.paramMap.get('id'));\r\n        this.getProduct(id);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Watch for the blur event from any input element on the form.\r\n    // This is required because the valueChanges does not provide notification on blur\r\n    const controlBlurs: Observable<any>[] = this.formInputElements\r\n      .map((formControl: ElementRef) => fromEvent(formControl.nativeElement, 'blur'));\r\n\r\n    // Merge the blur event observable with the valueChanges observable\r\n    // so we only need to subscribe once.\r\n    merge(this.productForm.valueChanges, ...controlBlurs).pipe(\r\n      debounceTime(800)\r\n    ).subscribe(value => {\r\n      this.displayMessage = this.genericValidator.processMessages(this.productForm);\r\n    });\r\n  }\r\n\r\n  addTag(): void {\r\n    this.tags.push(new FormControl());\r\n  }\r\n\r\n  deleteTag(index: number): void {\r\n    this.tags.removeAt(index);\r\n    this.tags.markAsDirty();\r\n  }\r\n\r\n  getProduct(id: number): void {\r\n    console.log(id)\r\n    this.productService.getProduct(id)\r\n      .subscribe({\r\n        next: (product: Product) => this.displayProduct(product),\r\n        error: err => this.errorMessage = err\r\n      });\r\n  }\r\n\r\n  displayProduct(product: Product): void {\r\n    if (this.productForm) {\r\n      this.productForm.reset();\r\n    }\r\n    this.product = product;\r\n\r\n    if (this.product.id === 0) {\r\n      this.pageTitle = 'Add Product';\r\n    } else {\r\n      this.pageTitle = `Edit Product: ${this.product.productName}`;\r\n    }\r\n\r\n    // Update the data on the form\r\n    this.productForm.patchValue({\r\n      productName: this.product.productName,\r\n      productCode: this.product.productCode,\r\n      starRating: this.product.starRating,\r\n      description: this.product.description,\r\n      imageUrl: this.product.imageUrl\r\n    });\r\n    this.productForm.setControl('tags', this.fb.array(this.product.tags || []));\r\n  }\r\n\r\n  deleteProduct(): void {\r\n    if (this.product.id === 0) {\r\n      // Don't delete, it was never saved.\r\n      this.onSaveComplete();\r\n    } else if (this.product.id) {\r\n      if (confirm(`Really delete the product: ${this.product.productName}?`)) {\r\n        this.productService.deleteProduct(this.product.id)\r\n          .subscribe({\r\n            next: () => this.onSaveComplete(),\r\n            error: err => this.errorMessage = err\r\n          });\r\n      }\r\n    }\r\n  }\r\n\r\n  saveProduct(): void {\r\n    if (this.productForm.valid) {\r\n      if (this.productForm.dirty) {\r\n        const p = { ...this.product, ...this.productForm.value };\r\n        p['imageUrl'] = this.imageUrl; \r\n\r\n        if (p.id === 0) {\r\n          this.productService.createProduct(p)\r\n            .subscribe({\r\n              next: x => {\r\n                console.log(x);\r\n                return this.onSaveComplete();\r\n              },\r\n              error: err => this.errorMessage = err\r\n            });\r\n        } else {\r\n          this.productService.updateProduct(p)\r\n            .subscribe({\r\n              next: () => this.onSaveComplete(),\r\n              error: err => this.errorMessage = err\r\n            });\r\n        }\r\n      } else {\r\n        this.onSaveComplete();\r\n      }\r\n    } else {\r\n      this.errorMessage = 'Please correct the validation errors.';\r\n    }\r\n  }\r\n\r\n  onSaveComplete(): void {\r\n    // Reset the form to clear the flags\r\n    this.productForm.reset();\r\n    this.router.navigate(['/products']);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-header\">\r\n    {{pageTitle}}\r\n  </div>\r\n\r\n  <div class=\"card-body\">\r\n    <form novalidate\r\n          (ngSubmit)=\"saveProduct()\"\r\n          [formGroup]=\"productForm\">\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"productNameId\">Product Name</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"productNameId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Name (required)\"\r\n                 formControlName=\"productName\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.productName }\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.productName}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"productCodeId\">Product Code</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"productCodeId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Code (required)\"\r\n                 formControlName=\"productCode\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.productCode}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.productCode}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"starRatingId\">Star Rating (1-5)</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\"\r\n                 id=\"starRatingId\"\r\n                 type=\"text\"\r\n                 placeholder=\"Rating (1-5)\"\r\n                 formControlName=\"starRating\"\r\n                 [ngClass]=\"{'is-invalid': displayMessage.starRating}\" />\r\n          <span class=\"invalid-feedback\">\r\n            {{displayMessage.starRating}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div formArrayName=\"tags\">\r\n        <div class=\"form-group row mb-2\"\r\n             *ngFor=\"let tag of tags.controls; let i=index\">\r\n          <label class=\"col-md-2 col-form-label\"\r\n                 [attr.for]=\"i\">Tag</label>\r\n\r\n          <div class=\"col-md-8\">\r\n            <input class=\"form-control\"\r\n                   [id]=\"i\"\r\n                   type=\"text\"\r\n                   placeholder=\"Tag\"\r\n                   [formControlName]=\"i\" />\r\n          </div>\r\n          <button class=\"col-md-1 btn btn-outline-warning btn-sm\"\r\n                  type=\"button\"\r\n                  title=\"Delete this search tag\"\r\n                  (click)=\"deleteTag(i)\">Delete Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2 mb-2\">\r\n          <button class=\"btn btn-outline-secondary btn-sm\"\r\n                  type=\"button\"\r\n                  title=\"Add a search tag\"\r\n                  (click)=\"addTag()\">Add Tag\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\" for=\"imageId\">Product Image</label>\r\n        <div class=\"col-md-8\">\r\n          <input class=\"form-control\" id=\"imageId\" type=\"file\" (change)=\"onImageSelected($event)\" />\r\n          <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" class=\"img-thumbnail\" style=\"max-width: 100px; max-height: 100px;\" />\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"form-group row mb-2\">\r\n        <label class=\"col-md-2 col-form-label\"\r\n               for=\"descriptionId\">Description</label>\r\n\r\n        <div class=\"col-md-8\">\r\n          <textarea class=\"form-control\"\r\n                    id=\"descriptionId\"\r\n                    placeholder=\"Description\"\r\n                    rows=3\r\n                    formControlName=\"description\"\r\n                    [ngClass]=\"{'is-invalid': displayMessage.description}\"></textarea>\r\n          <span class=\"invalid-feedback\">\r\n            {{ displayMessage.description}}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row mb-2\">\r\n        <div class=\"offset-md-2 col-md-4\">\r\n          <button class=\"btn btn-primary mr-3\"\r\n                  style=\"width:80px;\"\r\n                  type=\"submit\"\r\n                  [title]=\"productForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\"\r\n                  [disabled]=\"!productForm.valid\">\r\n            Save\r\n          </button>\r\n          <button class=\"btn btn-outline-secondary mr-3\"\r\n                  style=\"width:80px;\"\r\n                  type=\"button\"\r\n                  title=\"Cancel your edits\"\r\n                  [routerLink]=\"['/products']\">\r\n            Cancel\r\n          </button>\r\n          <button class=\"btn btn-outline-warning\"\r\n                  style=\"width:80px\"\r\n                  type=\"button\"\r\n                  title=\"Delete this product\"\r\n                  (click)=\"deleteProduct()\">\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <div class=\"alert alert-danger\"\r\n       *ngIf=\"errorMessage\">{{errorMessage}}\r\n  </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nclass AuthService {\n  constructor() {\n    this.isAuthenticated = false;\n    this.authState = {\n      isAuthenticated: false\n    };\n    this.token = null;\n  }\n  setToken(token) {\n    this.token = token;\n  }\n  getToken() {\n    return this.token;\n  }\n  // Simulate user login\n  login() {\n    this.authState.isAuthenticated = true;\n    //console.log(this.authState.isAuthenticated)\n  }\n  // Simulate user logout\n  logout() {\n    this.authState.isAuthenticated = false;\n    this.token = null;\n  }\n  // Check if the user is authenticated\n  isAuthenticatedUser() {\n    return this.authState.isAuthenticated;\n    this.token;\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["AuthService","constructor","isAuthenticated","authState","token","setToken","getToken","login","logout","isAuthenticatedUser","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hp\\OneDrive\\Desktop\\P10 - Training\\angular\\Angular Project - apm\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  private isAuthenticated = false;\r\n  authState = { isAuthenticated: false };\r\n\r\n  private token: string | null = null;\r\n\r\n  setToken(token: string): void {\r\n    this.token = token;\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return this.token;\r\n  }\r\n\r\n  // Simulate user login\r\n  login() {\r\n    this.authState.isAuthenticated = true;\r\n    //console.log(this.authState.isAuthenticated)\r\n  }\r\n\r\n  // Simulate user logout\r\n  logout() {\r\n    this.authState.isAuthenticated = false;\r\n    this.token = null;\r\n  }\r\n  \r\n  // Check if the user is authenticated\r\n  isAuthenticatedUser(): boolean {\r\n    return this.authState.isAuthenticated !!this.token;\r\n  }\r\n}\r\n"],"mappings":";;AAEA,MAIaA,WAAW;EAJxBC,YAAA;IAMU,KAAAC,eAAe,GAAG,KAAK;IAC/B,KAAAC,SAAS,GAAG;MAAED,eAAe,EAAE;IAAK,CAAE;IAE9B,KAAAE,KAAK,GAAkB,IAAI;;EAEnCC,QAAQA,CAACD,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,KAAK;EACnB;EAEA;EACAG,KAAKA,CAAA;IACH,IAAI,CAACJ,SAAS,CAACD,eAAe,GAAG,IAAI;IACrC;EACF;EAEA;EACAM,MAAMA,CAAA;IACJ,IAAI,CAACL,SAAS,CAACD,eAAe,GAAG,KAAK;IACtC,IAAI,CAACE,KAAK,GAAG,IAAI;EACnB;EAEA;EACAK,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACN,SAAS,CAACD,eAAkB;IAAA,IAAI,CAACE,KAAK;EACpD;;SA9BWJ,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAU,OAAA,EAAXV,MAAW,CAAAW,IAAA;EAAAC,UAAA,EAHV;AAAM;SAGPZ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}